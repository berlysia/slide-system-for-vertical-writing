name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      slide:
        description: "Specific slide to deploy (leave empty to deploy all)"
        required: false
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build slides
        run: |
          mkdir -p pages
          if [ -n "${{ github.event.inputs.slide }}" ]; then
            # Build specific slide
            echo "Building ${{ github.event.inputs.slide }}..."
            SLIDE_PATH="${{ github.event.inputs.slide }}" pnpm run build
            mkdir -p "pages/${{ github.event.inputs.slide }}"
            cp -r dist/* "pages/${{ github.event.inputs.slide }}/"
          else
            # Build all slides
            for slide in slides/*; do
              if [ -d "$slide" ]; then
                name=$(basename "$slide")
                echo "Building $name..."
                SLIDE_PATH="$name" pnpm run build
                mkdir -p "pages/$name"
                cp -r dist/* "pages/$name/"
              fi
            done
          fi

      - name: Create index page
        if: ${{ github.event.inputs.slide == '' }}
        run: |
          {
            echo '<!DOCTYPE html>'
            echo '<html>'
            echo '<head>'
            echo '  <meta charset="UTF-8">'
            echo '  <title>Slides Index</title>'
            echo '</head>'
            echo '<body>'
            echo '  <h1>Available Slides</h1>'
            echo '  <ul>'
            for slide in slides/*; do
              if [ -d "$slide" ]; then
                name=$(basename "$slide")
                echo "    <li><a href=\"$name/\">$name</a></li>"
              fi
            done
            echo '  </ul>'
            echo '</body>'
            echo '</html>'
          } > pages/index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./pages"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
